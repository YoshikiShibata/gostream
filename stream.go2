// Copyright Â© 2020 Yoshiki Shibata. All rights reserved.

package gostream

type Consumer(type T) func(t T)
type Predicate(type T) func(t T) bool
type Function(type T, R) func(t T) R

type Stream(type T) interface {
	// Filter returns a stream consisting of the elements of this stream
	// that mathe the give predicate.
	Filter(predicate Predicate(T)) Stream(T)

	// ForEach performs an action for each element of this stream.
	ForEach(action Consumer(T))

	// Distinct returns a stream consisting of the distinct elements 
	// (according to == of this stream.
	Distinct() Stream(T)
}
